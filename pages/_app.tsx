import '@/styles/globals.css'
import type { AppProps } from 'next/app'

import react from 'react';
import Head from 'next/head'

import Header from '@/components/Header';
import NewDialog from '@/components/newDialog';

import {
  createTheme,
  ThemeProvider,
  Box,
  Snackbar,
  Alert
} from '@mui/material';
import {
  useRouter
} from 'next/router';

import { config } from '@fortawesome/fontawesome-svg-core';
config.autoAddCss = false;
import '@fortawesome/fontawesome-svg-core/styles.css'


// it's passed down to all components so they can access these functions/values
type contextTree = {
  darkMode: {
    is: boolean,
    toggle: Function 
  }
  newDialog: {
    isOpen: boolean,
    toggle: Function
  },
  openSnackbar: Function,
  cardContainerRef: undefined | React.MutableRefObject<any>
}
const AppContext = react.createContext<contextTree>(null!)

export default function App({ Component, pageProps }: AppProps) {
  const router = useRouter();
  const [darkMode, setDarkMode] = react.useState(true);
  // the dialog to add a new Website/Folder
  const [newDialogOpen, setNewDialogOpen] = react.useState(false);

  // the snakcbar is a small feedback in the bottom right corner
  const [snackbarOpen, setSnackbarOpen] = react.useState(false);
  const [snackbarContent, setSnackbarContent] = react.useState<react.ReactElement>();
  const openSnackbar = (content: string, type: any) => {
      setSnackbarContent(
        <Alert onClose={() => setSnackbarOpen(false)} severity={type}>{content}</Alert>
      )
      setSnackbarOpen(true);
  }
  
  //mui theme
  const theme = createTheme({
    palette: {
      mode: darkMode ? "dark" : "light",
      ...(darkMode
        ? {
            primary: {
              main: "#252525",
            },
            text: {
              primary: "#ccc",
            },
          }
        : {
            primary: {
              main: "rgb(178,178,178)",
              dark: "#fff"
            },
            text: {
              primary: "#000",
            },
          }),
      secondary: {
        main: "#6320EE",
      },
      text: {
        secondary: "#6320EE",
      },
    },
  });


  return <>
      <Head>
        <title>Atarashii | Home</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppContext.Provider value={{
        darkMode: {
          is: darkMode,
          toggle: setDarkMode
        },
        newDialog: {
          isOpen: newDialogOpen,
          toggle: setNewDialogOpen
        },
        openSnackbar,
        cardContainerRef: undefined
      }}>
        <ThemeProvider theme={theme}>
          <Box
            sx={{
              bgcolor: "primary.dark",
              color: "text.primary"
            }}
          >
            <main>
              {
                router.asPath !== '/login' ? (<Header />) : ''
              }
              <Component {...pageProps} />
            </main>
          </Box>
          <NewDialog />
          <Snackbar
            open={snackbarOpen}
            autoHideDuration={5000}
            onClose={() => setSnackbarOpen(false)}
            anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}
          >
            {snackbarContent}
          </Snackbar>
        </ThemeProvider>
      </AppContext.Provider>
    </>
}

export function useAppContext() {
  return react.useContext(AppContext);
}
